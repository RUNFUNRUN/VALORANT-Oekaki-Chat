generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String     @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  Art           Art[]
  Favorite      Favorite[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String  @unique
  access_token      String  @unique
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Art {
  id          String     @id @default(cuid())
  slug        Int        @unique @default(autoincrement())
  createdAt   DateTime   @default(now())
  title       String
  description String?
  body        Boolean[]
  width       Int
  height      Int
  favorites   Favorite[]
  user        User       @relation(fields: [userId], references: [id])
  userId      String

  @@unique([id, userId])
  @@index([createdAt(sort: Desc)])
}

model Favorite {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  art       Art      @relation(fields: [artId], references: [id])
  userId    String
  artId     String

  @@unique([id, userId])
  @@index([createdAt(sort: Desc)])
}
